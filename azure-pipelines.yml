# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '4195a6a6-7ca9-49be-a527-2973a9310d00'
  imageRepositorynode: 'container-apps-store-api-microservice/node-service'
  imageRepositorygo: 'container-apps-store-api-microservice/go-service'
  imageRepositorypython: 'container-apps-store-api-microservice/python-service'
  containerRegistry: 'repasowebappacr.azurecr.io'
  dockerfilePathnode: '$(Build.SourcesDirectory)/node-service/Dockerfile'
  dockerfilePathgo: '$(Build.SourcesDirectory)/go-service/Dockerfile'
  dockerfilePathpython: '$(Build.SourcesDirectory)/python-service/Dockerfile'
  DEBUG_SITE: true
  tag: '$(Build.BuildId)'

  # Agent VM image name
  vmImageName: 'ubuntu-latest'
pool:
  vmImage: $(vmImageName)

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    steps:
    - task: Docker@2
      displayName: (node) Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositorynode)
        dockerfile: $(dockerfilePathnode)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: (go) Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositorygo)
        dockerfile: $(dockerfilePathgo)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
    - task: Docker@2
      displayName: (python) Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepositorypython)
        dockerfile: $(dockerfilePathpython)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)          
    - script: ls -lh
      displayName: 'Listandoo en Build'             

- stage: Deploy
  displayName: Despliega la infra   
  dependsOn: Build
  condition: succeeded()     
  jobs:
  - deployment: dev_deploy
    pool:
      vmImage: $(vmImageName) 
    displayName: Deploy en Dev
    environment: 'DEV'
    variables:
      - name: environment
        value: DEV
      - group: ${{ format('variables-{0}', variables.environment) }}  
    strategy:
      runOnce:
        deploy:
          steps:   
          - checkout: self
          - script: echo "Tratando de Crear ACA- $(containerRegistry)/$(imageRepositorypython):$(tag)"
            displayName: 'Msg Deploy'   
          - script: ls $(System.DefaultWorkingDirectory)
            displayName: 'Listandoo...'               
          - task: AzureCLI@2
            inputs:
              azureSubscription: 'scazuresponsorship'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                az --version
                az upgrade --yes
                az --version               
                az group create -g $(RESOURCE_GROUP_apps-store) -l 'canadacentral'
                az deployment group create -g $(RESOURCE_GROUP_apps-store) -f deploy/main.bicep --verbose -p \
                minReplicas=0 \
                nodeImage='$(containerRegistry)/$(imageRepositorynode):$(tag)' \                
                pythonImage='$(containerRegistry)/$(imageRepositorypython):$(tag)' \                
                goImage='$(containerRegistry)/$(imageRepositorygo):$(tag)' \                
                containerRegistry=$(containerRegistry) \
                containerRegistryUsername=$(registryUsername) \
                containerRegistryPassword=$(registryPassword) \ 
                deployApim=true 